Не все команды я применял на своем проекте..

И встретилась ошибка при апгрейде рейтинга у второго автора:
unsupported operand type(s) for +=: 'int' and 'NonType'

В пачке адкватного решения не нашел, хотелось бы узнать у вас..



1.Создать двух пользователей (с помощью метода User.objects.create_user('username')).
  u1 = User.objects.create_user(username='Alex')
  u2 = User.objects.create_user(username='Senya')

2.Создать два объекта модели Author, связанные с пользователями.
  Author.objects.create(authorUser=u1)
  Author.objects.create(authorUser=u2)

3.Добавить 4 категории в модель Category.
  Category.objects.create(name='IT')
  Category.objects.create(name='Music')
  Category.objects.create(name='Movies')
  Category.objects.create(name='ComputerGames')

4.Добавить 2 статьи и 1 новость.
  author1 = Author.objects.get(id=1)
  author2 = Author.objects.get(id=2)
  Post.objects.create(author=author1, category_type='NW', title='title', text='text')  
  Post.objects.create(author=author1, category_type='AR', title='Title text number 1', text='Big text number 1')
  Post.objects.create(author=author2, category_type='AR', title='Title text number 2', text='Very big text number 2')

5.Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
  post1, post2, post3 = Post.objects.get(id=1), Post.objects.get(id=2), Post.objects.get(id=3)
  categoryIT, categoryMusic, categoryMovies, categoryCG = Category.objects.get(id=1), Category.objects.get(id=2), Category.objects.get(id=3), Category.objects.get(id=4)
  PostCategory.objects.create(_post=post1, _category=categoryIT)
  PostCategory.objects.create(_post=post1, _category=categoryMusic)
  PostCategory.objects.create(_post=post1, _category=categoryMovies)
  PostCategory.objects.create(_post=post1, _category=categoryCG)

6.Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
  u1, u2, u3 = User.objects.create_user(username='Nastya'), User.objects.create_user(username='Nikita'), User.objects.create_user(username='Ryslan')
  post1, post2, post3 = Post.objects.get(id=1), Post.objects.get(id=2), Post.objects.get(id=3)
  Comment.objects.create(comPost=post1, comUser=u1, comText='Like')
  Comment.objects.create(comPost=post1, comUser=u2, comText='Like')
  Comment.objects.create(comPost=post2, comUser=u1, comText='Good')
  Comment.objects.create(comPost=post3, comUser=u3, comText='Very bad')

7.Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
  Post.objects.get(id=1).like()
  Post.objects.get(id=1).like()
  Post.objects.get(id=1).like()
  Post.objects.get(id=1).like()
  Post.objects.get(id=1).like()
  Post.objects.get(id=2).like() 
  Post.objects.get(id=2).like()
  Post.objects.get(id=2).like()
  Post.objects.get(id=3).like()
  Comment.objects.get(id=1).like()
  Comment.objects.get(id=1).like()
  Comment.objects.get(id=1).like()
  Comment.objects.get(id=1).like()
  Comment.objects.get(id=2).like() 
  Comment.objects.get(id=3).like() 
  Comment.objects.get(id=3).like()
  Comment.objects.get(id=3).like()
  Comment.objects.get(id=4).like() 
  Comment.objects.get(id=4).dislike() 
  Comment.objects.get(id=4).dislike()
  Comment.objects.get(id=4).dislike()
  Comment.objects.get(id=5).like() 
  Comment.objects.get(id=5).like()
  Comment.objects.get(id=5).like()
  Comment.objects.get(id=5).dislike()

8.Post.objects.create(author=author2, category_type='AR', title='Title text number 2', text='Very big text number 2')
  author1.up_rating()
  author2.up_rating()

9.Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта)
  a = Author.objects.order_by('-ratingAuthor')[:1]
  for i in a:
  i.ratingAuthor
  i.authorUser.username

10.Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
  bestPost = Post.objects.order_by('-rating')[:1]
  for i in bestPost:
	i.dateCreation
	i.author.authorUser
	i.rating
	i.title
	i.preview()

11.Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
  bestPostCom = Comment.objects.filter(commentPost=3)
  for k in bestPostCom:
	k.dateCreating
	k.commentUser
	k.rating
	k.text

